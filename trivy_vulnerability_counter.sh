#!/usr/bin/env bash

set -euo pipefail

# Check if image name is provided
if [ -z "$1" ]; then
    echo "Usage: $0 <image-name>"
    exit 1
fi

IMAGE_NAME="$1"

echo "Scanning $IMAGE_NAME for HIGH and CRITICAL vulnerabilities..."
echo "=================================================="

# Run trivy and capture output
TRIVY_OUTPUT=$(trivy image --severity HIGH,CRITICAL "$IMAGE_NAME" 2>&1)

# Initialize counters
TOTAL_VULNERABILITIES=0
NOT_SCANNED_COUNT=0
SCANNED_TARGETS=0

echo "Processing vulnerability data..."

# Parse the table format - look for rows with ‚îÇ separators
# Skip header, separator lines, and legend
while IFS= read -r line; do
    # Skip lines that are headers, separators, or legend
    if [[ $line =~ ‚îÄ ]] || [[ $line =~ "Target" ]] || [[ $line =~ "Legend" ]] || [[ $line =~ "Not scanned" ]] || [[ -z "$line" ]]; then
        continue
    fi
    
    # Process table rows with vulnerability data
    if [[ $line =~ ‚îú.*‚îº.*‚îº.*‚îº.*‚î§ ]] || [[ $line =~ ‚îÇ.*‚îÇ.*‚îÇ.*‚îÇ ]]; then
        # Extract the vulnerabilities column (3rd column)
        VULN_FIELD=$(echo "$line" | awk -F'‚îÇ' '{gsub(/[[:space:]]/, "", $4); print $4}')
        
        # Extract target name for reporting
        TARGET=$(echo "$line" | awk -F'‚îÇ' '{gsub(/^[[:space:]]+|[[:space:]]+$/, "", $2); print $2}')
        
        if [[ "$VULN_FIELD" =~ ^[0-9]+$ ]]; then
            # It's a number
            if [ "$VULN_FIELD" -gt 0 ]; then
                TOTAL_VULNERABILITIES=$((TOTAL_VULNERABILITIES + VULN_FIELD))
                echo "  ‚ö†Ô∏è  $TARGET: $VULN_FIELD vulnerabilities"
            else
                echo "  ‚úÖ $TARGET: 0 vulnerabilities"
            fi
            SCANNED_TARGETS=$((SCANNED_TARGETS + 1))
        elif [[ "$VULN_FIELD" == "-" ]]; then
            # It's a dash (not scanned)
            NOT_SCANNED_COUNT=$((NOT_SCANNED_COUNT + 1))
            echo "  ‚ùì $TARGET: Not scanned (-)"
        fi
    fi
done <<< "$TRIVY_OUTPUT"

# Also check the Secrets column for completeness (4th column)
echo ""
echo "Processing secrets data..."
NOT_SCANNED_SECRETS=0
SCANNED_SECRETS=0

while IFS= read -r line; do
    # Skip lines that are headers, separators, or legend
    if [[ $line =~ ‚îÄ ]] || [[ $line =~ "Target" ]] || [[ $line =~ "Legend" ]] || [[ $line =~ "Not scanned" ]] || [[ -z "$line" ]]; then
        continue
    fi
    
    # Process table rows with secrets data
    if [[ $line =~ ‚îú.*‚îº.*‚îº.*‚îº.*‚î§ ]] || [[ $line =~ ‚îÇ.*‚îÇ.*‚îÇ.*‚îÇ ]]; then
        # Extract the secrets column (4th column)
        SECRETS_FIELD=$(echo "$line" | awk -F'‚îÇ' '{gsub(/[[:space:]]/, "", $5); print $5}')
        
        # Extract target name for reporting
        TARGET=$(echo "$line" | awk -F'‚îÇ' '{gsub(/^[[:space:]]+|[[:space:]]+$/, "", $2); print $2}')
        
        if [[ "$SECRETS_FIELD" =~ ^[0-9]+$ ]]; then
            # It's a number
            if [ "$SECRETS_FIELD" -gt 0 ]; then
                echo "  üîç $TARGET: $SECRETS_FIELD secrets found"
            else
                echo "  ‚úÖ $TARGET: 0 secrets"
            fi
            SCANNED_SECRETS=$((SCANNED_SECRETS + 1))
        elif [[ "$SECRETS_FIELD" == "-" ]]; then
            # It's a dash (not scanned)
            NOT_SCANNED_SECRETS=$((NOT_SCANNED_SECRETS + 1))
            echo "  ‚ùì $TARGET: Secrets not scanned (-)"
        fi
    fi
done <<< "$TRIVY_OUTPUT"

echo "=================================================="
echo "VULNERABILITY SCAN SUMMARY"
echo "=================================================="
echo "Image: $IMAGE_NAME"
echo "Scan Date: $(date '+%Y-%m-%d %H:%M:%S')"
echo ""
echo "üîç Vulnerability Results (HIGH/CRITICAL only):"
echo "  ‚Ä¢ Total vulnerabilities found: $TOTAL_VULNERABILITIES"
echo "  ‚Ä¢ Targets scanned for vulnerabilities: $SCANNED_TARGETS"
echo "  ‚Ä¢ Targets not scanned for vulnerabilities: $NOT_SCANNED_COUNT"
echo ""
echo "üîê Secret Scanning Results:"
echo "  ‚Ä¢ Targets scanned for secrets: $SCANNED_SECRETS"
echo "  ‚Ä¢ Targets not scanned for secrets: $NOT_SCANNED_SECRETS"
echo ""

if [ $TOTAL_VULNERABILITIES -gt 0 ]; then
    echo "‚ö†Ô∏è  WARNING: $TOTAL_VULNERABILITIES HIGH/CRITICAL vulnerabilities found!"
    echo "   Run 'trivy image $IMAGE_NAME' for detailed vulnerability information."
    exit 1
else
    echo "‚úÖ SUCCESS: No HIGH/CRITICAL vulnerabilities found!"
    if [ $NOT_SCANNED_COUNT -gt 0 ]; then
        echo "   Note: $NOT_SCANNED_COUNT targets were not scanned"
    fi
    exit 0
fi
